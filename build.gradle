plugins {
    id 'java'
    id 'maven'
    id 'war'
}

repositories {
    jcenter()
    mavenLocal()
}

dependencies {
    compile 'log4j:log4j:1.2.+'
    compile 'org.freemarker:freemarker-gae:2.3.25-incubating'
    compile 'com.opencsv:opencsv:3.+'
    compile 'org.restlet.jee:org.restlet:2.3.+'
    compile 'org.restlet.jee:org.restlet.ext.servlet:2.3.+'
    compile 'org.restlet.jee:org.restlet.ext.freemarker:2.3.+'
    compile 'org.restlet.jee:org.restlet.ext.json:2.3.+'
    
    compile 'org.opencadc:cadc-util:[1.0.6,)'
    compile 'org.opencadc:cadc-registry:1.+'
    compile 'org.opencadc:cadc-vosi:1.+'

    compile 'org.opencadc:cadc-download-manager:1.+'
    compile 'org.opencadc:cadc-vos:[1.0.3,)'

    // Exclude the old restlet from being inserted here.
    compile ('org.opencadc:cadc-vos-server:1.+') {
        exclude group: 'org.restlet.jee'
        exclude group: 'org.restlet.jse'
    }

    compile 'org.opencadc:cadc-access-control:1.+'
    compile 'org.opencadc:cadc-access-control-identity:1.+'
    compile 'org.apache.commons:commons-configuration2:2.+'
    compile 'javax.websocket:javax.websocket-api:1.+'

    testCompile 'junit:junit:4.+'
    testCompile 'org.easymock:easymock:3.+'
}

def docker_image_name = 'opencadc/storage'

war {
    archiveName 'storage.' + extension
}

clean {
    doFirst {
        exec {
            executable 'rm'
            args ('-rf', './docker')
        }
    }
}

task initDockerize(type: Copy, dependsOn: build) {
    from 'Dockerfile'
    from 'src/main/resources/LocalAuthority.properties'
    into 'docker/'
}

task copyWAR(type: Copy, dependsOn: war) {
    from 'build/libs/'
    into 'docker/'
    include '*.war'
}

task dockerize(type: Exec, dependsOn: [initDockerize, copyWAR]) {
    commandLine 'docker', 'build', '-t', docker_image_name, '-f', './docker/Dockerfile', './docker/'
}

