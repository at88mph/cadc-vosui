plugins {
    id 'java'
    id 'maven'
    id 'war'
}

repositories {
    jcenter()
    mavenLocal()
}

dependencies {
    compile 'log4j:log4j:1.2.+'
    compile 'org.freemarker:freemarker:2.3.24-incubating'
    compile 'com.opencsv:opencsv:3.+'
    compile 'org.restlet.jee:org.restlet:2.3.+'
    compile 'org.restlet.jee:org.restlet.ext.servlet:2.3.+'
    compile 'org.restlet.jee:org.restlet.ext.freemarker:2.3.+'
    compile 'org.restlet.jee:org.restlet.ext.json:2.3.+'
    
    compile 'org.opencadc:cadc-registry:1.+'
    compile 'org.opencadc:cadc-vosi:1.+'
    compile 'org.opencadc:cadc-vos-server:1.+'
    compile 'org.opencadc:cadc-access-control:1.+'
    compile 'org.opencadc:cadc-access-control-identity:1.+'

//    providedCompile 'javax.servlet:servlet-api:2.5'

    testCompile 'junit:junit:4.+'
    testCompile 'org.easymock:easymock:3.+'
}

war {
    archiveName 'storage.' + extension
}

clean {
    doFirst {
        exec {
            executable 'rm'
            args ('-rf', './docker')
        }
    }
}

task initDockerize(type: Copy, dependsOn: build) {
    from 'Dockerfile'
    from 'src/main/resources/LocalAuthority.properties'
    into 'docker/'
}

task copyWAR(type: Copy, dependsOn: war) {
    from 'build/libs/'
    into 'docker/'
    include '*.war'
}

task dockerize(type: Exec, dependsOn: [initDockerize, copyWAR]) {
    commandLine 'docker', 'build', '-t', 'opencadc/storage', '-f', './docker/Dockerfile', './docker/'
}

